name: Deploy to Production

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push PHP image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .docker/php/Dockerfile.prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/oddsportal-php:latest

      - name: Build and push Nginx image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .docker/nginx/Dockerfile.prod
          push: true
          build-args: |
            PHP_IMAGE_WITH_CODE=${{ secrets.DOCKERHUB_USERNAME }}/oddsportal-php:latest
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/oddsportal-nginx:latest
          
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/oddsportal

            git pull origin main

            docker compose -f .docker/docker-compose.prod.yml down

            docker compose -f .docker/docker-compose.prod.yml pull

            docker compose -f .docker/docker-compose.prod.yml up -d --force-recreate --remove-orphans

            docker compose -f .docker/docker-compose.prod.yml exec --user www-data php php bin/console cache:clear --env=prod
            docker compose -f .docker/docker-compose.prod.yml exec --user www-data php php bin/console doctrine:migrations:migrate --env=prod --no-interaction

            docker image prune -a -f
